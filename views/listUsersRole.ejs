<%- include('head') -%>
<%- include('header') -%>

<main>
    <% if (locals.message) { %>
        <p><%= message %></p>
    <% } %>
    
    <h1>Liste des membres avec des roles</h1>

    <h2>Il y en a <%=listUsersRole.length%>.</h2>
    <form action="/deleteUsersList" method="post">
    <table>
        <thead>
            <tr>
                
                <th></th>
                <th>Login</th>
                <th>Email</th>
                <th>Date de création</th>
                <th>Role</th>
            </tr>
        </thead>
        <tbody>
            
            <%for (const user of listUsersRole){%>
                <tr data-id="<%= user.id %>">
                    
                    <%  if (locals.role !== 'superadmin' && (user.role === 'superadmin' || user.role === 'admin')){ %>
                        <td></td>
                    <% } else { %>
                    <td><input type="checkbox" value="<%= user.login %>" name="usersToDelete"/></td>
                    <% } %>
                    
                    <td class="user-login"><%= user.login %></td>
                    <td class="user-email"><%= user.email %></td>
                    <td class="user-date"><%= user.date %></td>
                    <td class="user-role"><%= user.role %></td>
                    
                    <%  if (locals.role !== 'superadmin' && (user.role === 'superadmin' || user.role === 'admin')){ %>
                        <td></td>
                    <% } else { %>
                    <td><button class="edit-button" type="button" value="<%= user.login %>">Modifier</button>
                        <button class="save-button" type="button" style="display: none;">Valider</button></td>
                    <% } %>
                    
                </tr>
            <% } %>
                </tbody>
                </table>
                <button type="submit">Supprimer les lignes selectionnées</button>
                </form>        
    
    
    <h2>Ajouter un nouveau responsable</h2>
        <form method="post" action="/registerRole" enctype="multipart/form-data">
            <div>
                <label for="pseudo">Login : </label>
                <input type="text" name="pseudo" id="pseudo">
            </div>
            <div>
                <label for="email">Email : </label>
                <input type="email" name="email" id="email">
            </div>
            <div>            
                <label for="password">Mot de passe : </label>
                <input type="password" name="password" id="password">
            </div>
            <div>
                <label for="image">Image de profil (max 5 Mo) :</label>
                <input type="file" name="image" id="image" accept="image/*" maxSize="5MB">
            </div>
            <div>            
                <label for="role">Role : </label>
                <select name="role" id="role">
                    <option value="moderateur">Modérateur</option>
                    <option value="admin">Admin</option>
                    <option value="productmanager">Product Manager</option>
                    <option value="redacteur">Redacteur</option>
                        <%  if (locals.role === 'superadmin' ){ %>
                            <option value="superadmin">SuperAdmin</option>
                        <% } %>
                </select>
            </div>
            <div>        
                <button type="submit">Ajouter</button>
            </div>
        </form>
                    
                 <script>
const editButtons = document.querySelectorAll('.edit-button');
const saveButtons = document.querySelectorAll('.save-button');

    editButtons.forEach((editButton) => {
        editButton.addEventListener('click', () => {
            const row = editButton.closest('tr');
            const userId = row.getAttribute('data-id');
            const login = row.querySelector('.user-login');
            const email = row.querySelector('.user-email');
            const date = row.querySelector('.user-date');
            const role = row.querySelector('.user-role');

            const loginInput = document.createElement('input');
            loginInput.type = 'text';
            loginInput.value = login.textContent;
            login.textContent = '';
            login.appendChild(loginInput);

            const emailInput = document.createElement('input');
            emailInput.type = 'text';
            emailInput.value = email.textContent;
            email.textContent = '';
            email.appendChild(emailInput);

            // Créez un champ de texte désactivé pour la date
            const dateInput = document.createElement('input');
            dateInput.type = 'text';
            dateInput.value = date.textContent;
            dateInput.setAttribute('readonly', true); // Rend le champ non modifiable
            date.textContent = '';
            date.appendChild(dateInput);

            const roleInput = document.createElement('input');
            roleInput.type = 'text';
            roleInput.value = role.textContent;
            role.textContent = '';
            role.appendChild(roleInput);

            editButton.style.display = 'none';
            row.querySelector('.save-button').style.display = 'block';
        });
    });

    saveButtons.forEach((saveButton) => {
        saveButton.addEventListener('click', () => {
            // Récupérez les données modifiées depuis les champs de texte
            const row = saveButton.closest('tr');
            const loginInput = row.querySelector('.user-login input');
            const emailInput = row.querySelector('.user-email input');
            const roleInput = row.querySelector('.user-role input');

            const updatedUserData = {
                id: userId,
                login: loginInput.value,
                email: emailInput.value,
                role: roleInput.value,
            };

            // Envoyez les données au serveur (vous devez implémenter la logique côté serveur pour cela)
            
            fetch('/updateUser', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(updatedUserData),
            })
            .then((response) => response.json())
            .then((data) => {
                // Traitez la réponse du serveur (par exemple, affichez un message de succès)
                console.log("Récupération réussie");
            })
            .catch((error) => {
                // Gérez les erreurs (par exemple, affichez un message d'erreur)
                console.error('Erreur lors de la mise à jour :', error);
            });
            
        });
    });
</script>
  
    
</main>
<%- include('footer') -%>